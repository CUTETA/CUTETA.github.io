<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Maix_Dock笔记</title>
      <link href="/2022/01/19/Maix-Dock%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/01/19/Maix-Dock%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Maix-Dock"><a href="#Maix-Dock" class="headerlink" title="Maix Dock"></a>Maix Dock</h1><p>注意：该文档基于 Linux 开发环境，硬件基于 Sipeed M1 Dock。</p><h2 id="USB-驱动："><a href="#USB-驱动：" class="headerlink" title="USB 驱动："></a>USB 驱动：</h2><ul><li>查看设备是否已经正确识别：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /dev/ttyUSB*</span><br></pre></td></tr></table></figure><h2 id="串口连接"><a href="#串口连接" class="headerlink" title="串口连接"></a>串口连接</h2><ul><li>安装 pyserial：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo python3 -m pip install pyserial</span><br></pre></td></tr></table></figure><ul><li>连接开发板：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo python3 -m serial.tools.miniterm --raw --dtr 0 --rts 0 /dev/ttyUSB0 115200</span><br></pre></td></tr></table></figure><ul><li>复位开发板：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">按两次键盘上的 Ctrl + T &amp;&amp; Ctrl + R</span><br></pre></td></tr></table></figure><ul><li>退出串口：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">按键盘上的 Ctrl + ]</span><br></pre></td></tr></table></figure><h2 id="MicroPython-基础语法"><a href="#MicroPython-基础语法" class="headerlink" title="MicroPython 基础语法"></a>MicroPython 基础语法</h2><ul><li>函数：在 Python 中, 定义一个函数要使用  <em>def</em>  语句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> 函数名（参数列表）:</span></span><br><span class="line">    函数体</span><br><span class="line">    </span><br><span class="line"><span class="comment">#例：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>(<span class="params">a,b</span>):</span><span class="comment">#def 关键字定义函数</span></span><br><span class="line"><span class="comment">##########函数体##########</span></span><br><span class="line">    <span class="keyword">if</span> a&gt;b:</span><br><span class="line">        <span class="keyword">return</span> a<span class="comment">#return 关键字设置返回值，a 是函数输入参数</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> b<span class="comment">#return 关键字设置返回值，b 是函数输入参数</span></span><br><span class="line"><span class="comment">##########函数体##########</span></span><br><span class="line">    </span><br><span class="line">a = <span class="number">4</span></span><br><span class="line">b = <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(a, b))</span><br></pre></td></tr></table></figure><h2 id="存储系统-K210-M1-Dock"><a href="#存储系统-K210-M1-Dock" class="headerlink" title="存储系统(K210 M1 Dock)"></a>存储系统(K210 M1 Dock)</h2><ul><li>Flash：    </li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">start：0x000000</th><th style="text-align:center">start：0x300000</th><th style="text-align:center">start：0xD00000</th></tr></thead><tbody><tr><td style="text-align:center">MaixPy.bin（固件区）</td><td style="text-align:center">xxx.kmodel（模型区）</td><td style="text-align:center">spiffs （文件系统区）</td></tr></tbody></table></div><ul><li><p>SD卡：</p><p>需满足以下要求：</p><pre><code>    1. 支持 SPI 模式    2. </code></pre></li></ul><h2 id="视觉（图像处理-by-—-MaixPy-IDE）"><a href="#视觉（图像处理-by-—-MaixPy-IDE）" class="headerlink" title="视觉（图像处理 by — MaixPy IDE）"></a>视觉（图像处理 by — MaixPy IDE）</h2><ol><li><strong>获取图像常用函数（基于 sensor 库）：</strong></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sensor <span class="comment">#导入内置的sensor（摄像头）库</span></span><br><span class="line"></span><br><span class="line">sensor.reset() <span class="comment">#初始化摄像头</span></span><br><span class="line">sensor.set_pixformat(sensor.RGB565)  <span class="comment">#设置摄像头为RGB565格式（彩色，每个像素16bit）</span></span><br><span class="line">sensor.set_framesize(sensor.VGA)     <span class="comment">#分辨率为VGA</span></span><br><span class="line">                                     <span class="comment">#【VGA】 : 640x480</span></span><br><span class="line">                                     <span class="comment">#【QVGA】: VGA/4</span></span><br><span class="line">sensor.set_hmirror(<span class="number">0</span>)                <span class="comment">#设置摄像头水平镜像，1：开启水平镜像，0：关闭水平镜像</span></span><br><span class="line">sensor.set_vflip(<span class="number">0</span>)                  <span class="comment">#设置摄像头垂直翻转，1：开启垂直翻转，0：关闭垂直翻转</span></span><br><span class="line">sensor.set_jb_quality(<span class="number">100</span>)           <span class="comment">#设置传送给 IDE 图像的质量（0~100），数字越大质量越好</span></span><br><span class="line">sensor.skip_frames(time = <span class="number">2000</span>)      <span class="comment">#跳过2000毫秒的帧,摄像头刚启动时，图像质量还没稳定，所以跳过一些图像</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    img = senseor.snapshot() <span class="comment">#截取当前图像，存放于变量 img 中</span></span><br><span class="line">    img = img.to_grayscale(copy=<span class="literal">False</span>)<span class="comment">#转换为灰度图像</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>sensor.set_pixformat(pixformat)</strong>    <strong>&gt;&gt;&gt;&gt;</strong>   <strong>设置相机模块的像素模式</strong></p><ul><li>参数：<br>​          -  <em>sensor.GRAYSCALE</em>        灰度模式，每个像素   8bit<br>​          -  <em>sensor.RGB565</em>              彩色模式，每个像素 16bit</li></ul></li><li><p><strong>senseor.snapshot()</strong>                              <strong>&gt;&gt;&gt;&gt;</strong>   <strong>从摄像头取一帧图像数据，返回值是一张图像的对象</strong></p></li><li><p><strong>sensor.set_hmirror(True)</strong>                   <strong>&gt;&gt;&gt;&gt;</strong>   <strong>水平方向翻转（镜像）</strong></p></li><li><p><strong>sensor.set_vflip((True)                   </strong>     <strong>&gt;&gt;&gt;&gt;</strong>   <strong>垂直方向翻转（镜像）</strong></p></li><li><p><strong>sensor.skip_frames(n, [, time])</strong>   </p><ul><li><p>参数：</p><p>​          -  n: 跳过 n 帧图像</p><p>​          -  time: 跳过指定时间，单位为ms</p></li><li><p>若 n 和 time 皆未指定，该方法跳过300毫秒的帧；</p></li><li><p>若二者皆指定，该方法会跳过 n 数量的帧，但将在 time 毫秒后返回</p></li></ul></li></ul><ol><li><strong>实战举例（图像二值化）</strong></li></ol><p>二值化：即将大于某个临界灰度值的像素灰度设为灰度极大值（255），小于这个值的设为灰度极小值（0）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><hr><center>未完待续</center><center>2022/01/19</center>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> K210 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2021/10/18/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/10/18/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><p><strong>关机：shutdown -h + 时间</strong></p><p><em>eg：shutdown -h 5                     5分钟后关机</em></p><p>​       <em>shutdown -h now               立即关机</em></p><p><strong>重启：shutdown -r + 时间</strong></p><p><em>eg：shutdown -r 5                     5分钟后重启</em></p><p>​       <em>shutdown -r now               立即重启</em></p><p><strong>帮助：—help</strong></p><p><em>eg：cd —help</em></p><h2 id="su-和-sudo"><a href="#su-和-sudo" class="headerlink" title="su 和 sudo"></a>su 和 sudo</h2><h3 id="su："><a href="#su：" class="headerlink" title="su："></a>su：</h3><p>用于用户之间的切换</p><h3 id="sudo："><a href="#sudo：" class="headerlink" title="sudo："></a>sudo：</h3><p>让普通用户具有临时使用root权限的权利</p><h2 id="目录操作命令"><a href="#目录操作命令" class="headerlink" title="目录操作命令"></a>目录操作命令</h2><h3 id="切换命令：cd"><a href="#切换命令：cd" class="headerlink" title="切换命令：cd"></a>切换命令：cd</h3><p>cd /                                                 切换到根目录</p><p>cd /usr                                           切换到根目录下的usr目录</p><p>cd ../  或  cd ..                                切换到上一级目录</p><p>cd ~                                                切换到home目录</p><p>cd -                                                 切换上次访问的目录</p><h3 id="目录查看：ls"><a href="#目录查看：ls" class="headerlink" title="目录查看：ls"></a>目录查看：ls</h3><p>ls                                                    查看当前目录下的所有目录和文件</p><p>ls -a                                                查看当前目录下的所有目录和文件（包括隐藏文件）</p><p>ls -l                                                 列表查看当前目录下的所有目录和文件</p><p>ls /dir                                             查看指定目录下的所有目录和文件（eg：ls /usr）</p><p><em>注：(pwd：查看绝对路径)</em></p><h3 id="目录操作（增，删，改，查）"><a href="#目录操作（增，删，改，查）" class="headerlink" title="目录操作（增，删，改，查）"></a>目录操作（增，删，改，查）</h3><h4 id="创建目录-：mkdir"><a href="#创建目录-：mkdir" class="headerlink" title="创建目录 ：mkdir"></a>创建目录 ：mkdir</h4><p>mkdir aaa                                     在当前目录下创建一个名为<em>aaa</em>的目录</p><p>mkdir /usr/aaa                           在指定目录<em>usr</em>下创建一个名为<em>aaa</em>的目录</p><h4 id="删除目录：rm"><a href="#删除目录：rm" class="headerlink" title="删除目录：rm"></a>删除目录：rm</h4><p><strong>删除文件：</strong></p><p>rm 文件                                          删除当前目录下的文件</p><p>rm -f 文件                                      删除当前目录的的文件（不询问）</p><p><strong>删除目录：</strong></p><p>rm -r aaa                                      递归删除当前目录下的aaa目录</p><p>rm -rf aaa                                    递归删除当前目录下的aaa目录（不询问）</p><p><strong>全部删除：</strong></p><p>rm -rf *                                        将当前目录下的所有目录和文件全部删除</p><p>rm -rf /*                                     【自杀命令！慎用！慎用！慎用！】将根目录下的所有文件全部删除</p><p><strong><em>注意：rm不仅可以删除目录，也可以删除其他文件或压缩包，为了方便大家的记忆，无论删除任何目录或文件，都直接使用 rm -rf 目录/文件/压缩包</em></strong>。</p><h4 id="目录修改：mv-cp"><a href="#目录修改：mv-cp" class="headerlink" title="目录修改：mv / cp"></a>目录修改：mv / cp</h4><p><strong>重命名目录/剪切目录：                                                 mv</strong></p><p><em>eg： mv aaa bbb                           将目录 aaa 改为 bbb</em></p><p>​        <em>mv /usr/tmp/aaa/usr            将 usr/tmp目录下的 aaa 目录剪切到 /usr 目录下</em></p><p><strong>拷贝目录：                                                                     cp -r 目录位置名称 目标位置 （-r代表递归）</strong> </p><p><em>eg：cp /usr/tmp/aaa  /usr          将  usr/tmp 目录下的 <strong>aaa</strong>目录复制到  /usr 目录下</em> </p><p><strong><em>注：拷贝文件和压缩包时，不用写-r递归。</em></strong></p><h4 id="目录搜索：find-目录-参数-文件名称"><a href="#目录搜索：find-目录-参数-文件名称" class="headerlink" title="目录搜索：find 目录 参数 文件名称"></a>目录搜索：find 目录 参数 文件名称</h4><p><em>eg：find /usr/tmp -name ‘a**</em>‘   查找/usr/tmp目录下的所有以a开头的目录或文件*</p><h2 id="文件操作命令"><a href="#文件操作命令" class="headerlink" title="文件操作命令"></a>文件操作命令</h2><h3 id="新建文件：touch-文件名"><a href="#新建文件：touch-文件名" class="headerlink" title="新建文件：touch 文件名"></a>新建文件：touch 文件名</h3><p><em>eg： touch  aa.txt                    在当前目录创建一个名为 aa.txt 的文件</em></p><h3 id="删除文件："><a href="#删除文件：" class="headerlink" title="删除文件："></a>删除文件：</h3><p><strong>查看 rm 命令</strong></p><h3 id="修改文件：vi-或-vim"><a href="#修改文件：vi-或-vim" class="headerlink" title="修改文件：vi 或 vim"></a>修改文件：vi 或 vim</h3><h4 id="命令行模式："><a href="#命令行模式：" class="headerlink" title="命令行模式："></a>命令行模式：</h4><p>【1】控制光标移动：                ↑，↓，j</p><p>【2】删除当前行：                    dd </p><p>【3】查找：                               /字符</p><p>【4】进入编辑模式：                i o a</p><p>【5】进入底行模式：                :</p><h4 id="编辑模式："><a href="#编辑模式：" class="headerlink" title="编辑模式："></a>编辑模式：</h4><p>【1】ESC 退出编辑模式到命令行模式；</p><h4 id="底行模式："><a href="#底行模式：" class="headerlink" title="底行模式："></a>底行模式：</h4><p>【1】退出编辑：                        :q</p><p>【2】强制退出：                        :q!</p><p>【3】保存并退出：                    :wq</p><h3 id="打开文件："><a href="#打开文件：" class="headerlink" title="打开文件："></a>打开文件：</h3><p>命令：                                          vi 文件名</p><p>eg：vi aa.txt                               打开当前目录下的aa.txt文件</p><p><strong><em>注意：使用vi编辑器打开文件后，处于命令模式，并不能编辑，需进入编辑模式。</em></strong></p><p><strong>i,a,o：</strong></p><p><strong><em>i:                                                   在光标所在字符前开始插入</em></strong><br><strong><em>a:                                                  在光标所在字符后开始插入</em></strong><br><strong><em>o:                                                  在光标所在行的下面另起一新行插入</em></strong></p><h3 id="查看文件："><a href="#查看文件：" class="headerlink" title="查看文件："></a>查看文件：</h3><p><strong>【1】cat：                                   查看最后一屏</strong></p><p>  <em>eg：cat sudo.conf                     只能显示 sudo.conf 的最后一屏内容</em></p><p><strong>【2】more：                               百分比显示</strong></p><p>  <em>eg：more sudo.conf                  回车向下一行，空格向下一页，q退出查看</em></p><p><strong>【3】less：                                  翻页查看</strong></p><p>  <em>eg：ess sudo.conf                      PgUp 和 PgDn 向上和向下翻页，q退出查看</em></p><p><strong>【4】tail ：                                  指定行数查看</strong></p><p>  <em>eg：tail -10 sudo.conf                tail -10 查看 sudo.conf 文件的后10行，Ctrl+C 结束</em>  </p><h2 id="权限修改"><a href="#权限修改" class="headerlink" title="权限修改"></a>权限修改</h2><h2 id="压缩及解压文件"><a href="#压缩及解压文件" class="headerlink" title="压缩及解压文件"></a>压缩及解压文件</h2><blockquote><p>Windows的压缩文件的扩展名:                              .zip/.rar</p><p>linux中的打包文件的扩展名：                                aa.tar    </p><p>linux中的压缩文件的扩展名：                                bb.gz   </p><p>linux中打包并压缩的文件的扩展名：                    .tar.gz</p></blockquote><h3 id="打包并压缩："><a href="#打包并压缩：" class="headerlink" title="打包并压缩："></a>打包并压缩：</h3><p><strong>命令：      tar -zcvf 打包压缩后的文件名 要打包的文件</strong>                                               </p><blockquote><p>z：        调用gzip压缩命令进行压缩</p><p>c：        打包文件</p><p>v：        显示运行过程</p><p>f：         指定文件名</p></blockquote><p><em>eg：tar -zcvf ab.tar.gz aa.txt bb.txt  或  tar -zcvf ab.tar.gz</em> *      即打包并压缩目录下的所有文件，并命名为ab.tar.gz</p><pre><code>   *tar -zcvf blog.tar.gz /home/z/Jan_blog/*                                 即打包并压缩 /home/z/Jan_blog/ 目录下的所有文件，并命名为blog.tar.gz</code></pre><h3 id="解压："><a href="#解压：" class="headerlink" title="解压："></a>解压：</h3><p><strong>命令：      tar -zxvf 要解压的文件名</strong> </p><blockquote><p>x：        解压文件</p></blockquote><p><em>eg：tar -zxvf ab.tar</em>                    将 ab.tar 解压到当前目录下</p><p>​       <em>tar -zxvf ab.tar -C /usr</em>         将 ab.tar 解压到根目录/usr下 (-C：代表指定解压的位置)</p><h2 id="查找命令"><a href="#查找命令" class="headerlink" title="查找命令"></a>查找命令</h2><h3 id="grep："><a href="#grep：" class="headerlink" title="grep："></a>grep：</h3><h3 id="find："><a href="#find：" class="headerlink" title="find："></a>find：</h3><h3 id="locate："><a href="#locate：" class="headerlink" title="locate："></a>locate：</h3><p>可以让使用者可以很快速的搜寻某个路径。默认每天自动更新一次，所以使用 <em>locate</em> 命令查不到最新变动过的文件，需在使用 <em>locate</em> 之前，先使用 <em>updatedb</em> 命令。</p><p><em>eg：</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">updatedb          #更新数据库</span><br><span class="line">locate /etc/sh    #搜索etc目录下所有以sh开头的文件 </span><br><span class="line">locate pwd        #查找和pwd相关的所有文件</span><br></pre></td></tr></table></figure><h3 id="whereis："><a href="#whereis：" class="headerlink" title="whereis："></a>whereis：</h3><p>定位可执行文件、源代码文件、帮助文件在文件系统中的位置。</p><p><strong><em>注：(定位的文件属性属于原始代码，二进制文件，帮助文件)</em></strong></p><p><em>eg：</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">whereis -b bash               #显示bash 命令的二进制程序  </span><br><span class="line">bash: /bin/bash /etc/bash.bashrc /usr/share/bash    <span class="meta">#bash命令的二进制程序的地址  </span></span><br><span class="line">whereis -m bash               #显示bash 命令的帮助文件  </span><br><span class="line">bash: /usr/share/man/man1/bash<span class="number">.1</span>.gz  <span class="meta">#bash命令的帮助文件地址 </span></span><br></pre></td></tr></table></figure><h3 id="which："><a href="#which：" class="headerlink" title="which："></a>which：</h3><p>在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。</p><p><em>eg：</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">which pwd  #查找pwd命令所在路径 </span><br><span class="line">which java  #查找path中java的路径</span><br></pre></td></tr></table></figure><h2 id="网络命令"><a href="#网络命令" class="headerlink" title="网络命令"></a>网络命令</h2><blockquote><p><strong>ifconfig：查看网卡信息</strong></p><p><strong>ping：查看与某台机器的连接情况</strong></p><p><strong>service network restart：重启网络</strong></p></blockquote><h2 id="other"><a href="#other" class="headerlink" title="other"></a>other</h2><blockquote><p><strong>ps -ef：查看所有正在运行的进程</strong></p><p><strong>Ctrl + Alt + T：打开终端</strong></p><p><strong>clear：终端清屏</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubeMX新建工程</title>
      <link href="/2021/10/12/note-STM32CubeMX/"/>
      <url>/2021/10/12/note-STM32CubeMX/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-STM32CubeMX-新建工程"><a href="#使用-STM32CubeMX-新建工程" class="headerlink" title="使用 STM32CubeMX 新建工程"></a><strong>使用</strong> <strong>STM32CubeMX</strong> <strong>新建工程</strong></h1><h2 id="新建工程"><a href="#新建工程" class="headerlink" title="新建工程"></a><strong>新建工程</strong></h2><p>File -&gt; New Project </p><p><img src="/2021/10/12/note-STM32CubeMX/1.png" alt="1"></p><h2 id="选择-CPU-型号"><a href="#选择-CPU-型号" class="headerlink" title="选择 CPU 型号"></a><strong>选择</strong> <strong>CPU</strong> <strong>型号</strong></h2><p>选择CPU型号(例如：STM32F103ZETx)</p><p><img src="/2021/10/12/note-STM32CubeMX/2.png" alt="2"></p><p>界面详解：</p><p><img src="/2021/10/12/note-STM32CubeMX/9.png" alt="9"></p><p>① <strong><em>Categories：</em></strong> 种类选择 <em>（即将MCU的各种外设和资源分类，供用户选择使用）</em></p><p>​     <strong><em>A-Z：</em></strong>               顺序选择<em>（即将MCU的各种外设和资源按 <strong>A-Z</strong> 排序，供用户选择使用）</em></p><p>②<strong>外设配置：</strong>      设置所选择外设的各种功能</p><p>③<strong>预览界面：</strong>      引脚预览 和 系统预览</p><h2 id="确认时钟源"><a href="#确认时钟源" class="headerlink" title="确认时钟源"></a><strong>确认时钟源</strong></h2><p>打开 System Core -&gt;  RCC 选项, 选择 Crystal/Ceramic Resonato(外部晶振) 作为 HSE 的时钟源。</p><p><em>注： ①HSE：外部高速时钟(输入管脚是OSC_IN和OSC_OUT)   ②HSI：高速内部时钟   ③LSE：低速外部时钟，输入管脚是OSC32_IN和OSC32_OUT（32.768kHz） 。</em></p><p><img src="/2021/10/12/note-STM32CubeMX/3.png" alt="3"></p><h2 id="配置-IO-口"><a href="#配置-IO-口" class="headerlink" title="配置 IO 口"></a><strong>配置</strong> <strong>IO</strong> <strong>口</strong></h2><p><img src="/2021/10/12/note-STM32CubeMX/6.png" alt="6"></p><h2 id="配置系统时钟"><a href="#配置系统时钟" class="headerlink" title="配置系统时钟"></a><strong>配置系统时钟</strong></h2><p><img src="/2021/10/12/note-STM32CubeMX/4.png" alt="4"></p><p><strong>标号③：</strong>PLLSource MUX(锁相环时钟源选择器)，选择 “HSE”，即：8MHz外部晶振谐振体。</p><p>​               PLLNul(锁相环倍频）</p><p><strong>System Clock MUX(系统时钟选择器)：</strong></p><p>​                         1. HSI：芯片内部时钟信号（HSI时钟信号由内部8MHz的RC振荡器产生，可直接作为系统时钟或在2分频后作为PLL输入）</p><p>​                         2. HSE：高速外部时钟信号</p><p>​                         3. PLL（以下述时钟源之一为输入）：</p><p>​                                       1. HSI时钟除2</p><p>​                                       2. HSE或通过一个可配置分频器的PLL2时钟</p><p><strong>HCLK（高性能总线时钟）:</strong>  72MHz</p><p><strong>Cortex System timer：</strong> 配置为HCLK的1/8</p><p><strong>APB1 Peripheral clocks（低速外设总线时钟）：</strong>配置为HCLK的2分频</p><p><strong>APB2 Peripheral clocks（高速外设总线时钟）：</strong>配置为HCLK的1分频</p><p><a href="https://blog.csdn.net/as480133937/article/details/98845509">系统时钟RCC详解</a> &lt;— 大佬的文章</p><h2 id="进一步配置-IO-的具体属性"><a href="#进一步配置-IO-的具体属性" class="headerlink" title="进一步配置 IO 的具体属性"></a><strong>进一步配置</strong> <strong>IO</strong> <strong>的具体属性</strong></h2><p>点击 Confifiguration，进入系统详细配置，选择 GPIO，配置IO 的电平，GPIO模式，无上下/上/下拉，最大输出速度，引脚标签。</p><p><img src="/2021/10/12/note-STM32CubeMX/5.png" alt="5"></p><h2 id="配置工程属性"><a href="#配置工程属性" class="headerlink" title="配置工程属性"></a><strong>配置工程属性</strong></h2><p><strong>Pinout &amp; Configuration -&gt; SYS 设置Debug</strong></p><p><img src="/2021/10/12/note-STM32CubeMX/7.png" alt="7"></p><p><strong>-&gt; Project Manage, 配置工程的名称，路径，使用的 IDE 工具，堆栈大小。</strong></p><p><img src="/2021/10/12/note-STM32CubeMX/8.png" alt="8"></p><p><strong><em>(注意不要使用中文路径和工程名称)</em></strong></p><p><img src="/2021/10/12/note-STM32CubeMX/10.png" alt="10"></p><p><strong><em>Copy all used libraries into the project folder</em></strong>：</p><p>优点：后续需要新增其他外设或不再用STM32CubeMX时移植方便</p><p>缺点： 体积大，编译时间长(很长)</p><p><strong><em>Copy only the necessary library files</em>：</strong>    （<strong><em>Recommend</em></strong>）</p><p>优点：体积相对小，编译时间短，并且工程可复制拷贝</p><p>缺点： 新增外设时需要重新用STM32CubeMX导入 </p><p><strong><em>Add necessary library files as reference in the toolchain project configuration file：</em></strong></p><p>优点：体积小，比较节约硬盘空间</p><p>缺点： 复制到其他电脑上或者软件包位置改变，就需要修改相对应的路径 </p><h2 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a><strong>生成代码</strong></h2><p>点击 <strong><em>GENERATE CODE</em></strong>, 即在设定的路径成功生成代码</p><p><img src="/2021/10/12/note-STM32CubeMX/11.png" alt="11"></p><h2 id="添加用户测试代码"><a href="#添加用户测试代码" class="headerlink" title="添加用户测试代码"></a><strong>添加用户测试代码</strong></h2><p><img src="/2021/10/12/note-STM32CubeMX/12.png" alt="12"></p><p><img src="/2021/10/12/note-STM32CubeMX/13.png" alt="13"></p><p><strong>注：代码编写在BEGIN 和 END之间，更新时不会被覆盖。</strong></p><h2 id="配置下载调试工具"><a href="#配置下载调试工具" class="headerlink" title="配置下载调试工具"></a><strong>配置下载调试工具</strong></h2><p><img src="/2021/10/12/note-STM32CubeMX/14.png" alt="14"></p><p><img src="/2021/10/12/note-STM32CubeMX/15.png" alt="15"></p><h2 id="下载验证"><a href="#下载验证" class="headerlink" title="下载验证"></a><strong>下载验证</strong></h2><hr><p>END</p><p>2021/10/12</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> STM32 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/2021/08/01/hello-world/"/>
      <url>/2021/08/01/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown基本语法"><a href="#MarkDown基本语法" class="headerlink" title="MarkDown基本语法"></a>MarkDown基本语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title=" 标题"></a><i class="fa fa-wrench faa-wrench animated-hover"> 标题</i></h2><p># + 标题名字（井号的个数代表标题的级数）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span> </span><br></pre></td></tr></table></figure><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**加粗**</span> </span><br></pre></td></tr></table></figure><h3 id="斜体-加粗"><a href="#斜体-加粗" class="headerlink" title="斜体+加粗"></a>斜体+加粗</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*斜体+加粗<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br></pre></td></tr></table></figure><h3 id="上标和下标"><a href="#上标和下标" class="headerlink" title="上标和下标"></a>上标和下标</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">上标：^x^</span><br><span class="line">下标：~x~</span><br></pre></td></tr></table></figure><p>eg：上标 x^2^ ；下标 x~2~</p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">快捷键（快捷键ctrl+u）</span><br></pre></td></tr></table></figure><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">三个或三个以上的 &#x27;<span class="emphasis">*&#x27;，&#x27;-&#x27; ,&#x27;_&#x27;</span></span><br></pre></td></tr></table></figure><p>eg：      </p><hr><hr><hr><h3 id="表情-smile-Ω"><a href="#表情-smile-Ω" class="headerlink" title="表情  :smile:  ;-)   Ω"></a>表情  :smile:  ;-)   Ω</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">快捷键win + .</span><br></pre></td></tr></table></figure><h3 id="表格与代码块"><a href="#表格与代码块" class="headerlink" title="表格与代码块"></a>表格与代码块</h3><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name | price--- | ---xxxx | xxxxxx|xxx:---: 对齐</span><br></pre></td></tr></table></figure><p>例：</p><div class="table-container"><table><thead><tr><th>name</th><th>price</th></tr></thead><tbody><tr><td>xxxx</td><td>xxx</td></tr><tr><td>xxx</td><td>xxx</td></tr></tbody></table></div><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```+语言</span></span><br></pre></td></tr></table></figure><p>eg：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Hello!&#x27;</span>) </span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;加一个空格</span><br></pre></td></tr></table></figure><p>eg： </p><blockquote><p>俺是个大帅哥</p><blockquote><p>俺最帅</p></blockquote></blockquote><h3 id="外部链接跳转"><a href="#外部链接跳转" class="headerlink" title="外部链接跳转"></a>外部链接跳转</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">name</span>](<span class="link">link</span>)</span><br></pre></td></tr></table></figure><p>eg:</p><p><a href="https://jan-z.top/">俺的blog</a></p><hr><p>END</p><p>2021/8/3</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
